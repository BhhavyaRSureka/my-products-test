# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /DeleteScheduleTransfers_post for http method type POST in artillery framework

# RoostTestHash=47355f872f


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "DeleteScheduleTransfers_post_others.csv"
    fields:
      - "customerId"
      - "paymentId"
      - "invalidPaymentId"
    skipHeader: true
  environments:
    invalid:
      target: "http://invalidurl.com"
scenarios:
  - name: "Testing non-successful API requests"
    flow:
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            koreUserId: "invalidUserId"
            botId: "invalidBotId"
            userCode: "invalidUserCode"
            accountId: "invalidAccountId"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - equals: ["message", "Unauthorized"]
        think: 1
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            koreUserId: "validUserId"
            botId: "validBotId"
            userCode: "validUserCode"
            accountId: "validAccountId"
            Authorization: "Bearer invalidToken"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - equals: ["message", "Invalid token"]
        think: 1
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            koreUserId: "validUserId"
            botId: "validBotId"
            userCode: "validUserCode"
            accountId: "validAccountId"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ invalidPaymentId }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
            - equals: ["error", "Payment Not Found"]
        think: 1
      - post:
          url: "/invalidEndpoint"
          headers:
            koreUserId: "validUserId"
            botId: "validBotId"
            userCode: "validUserCode"
            accountId: "validAccountId"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
          expect:
            - statusCode: 404
        think: 1
