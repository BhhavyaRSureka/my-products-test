# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /deposit_post for http method type POST in artillery framework

# RoostTestHash=70db6d5eac


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "deposit_post_others.csv"
    fields:
      - "customerId"
      - "sourceAccountId"
      - "amount"
      - "currency"
      - "frontImage"
      - "backImage"
  plugins:
    expect: {}

scenarios:
  - name: "Test Non-success API responses"
    flow:
      - log: "Testing with invalid payload"
        post:
          url: "/deposit"
          headers:
            koreUserId: "abc"
            botId: "asd"
            accountId: "qwe"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
            content-type: "application/json"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 422 # Expecting Unprocessable Entity response
            - hasProperty: "errors"
        think: 1

      - log: "Testing with missing Authorization header"
        post:
          url: "/deposit"
          headers:
            koreUserId: "abc"
            botId: "asd"
            accountId: "qwe"
            content-type: "application/json"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 401 # Expecting Unauthorized response
        think: 1

      - log: "Testing with invalid URL"
        post:
          url: "/invalid-url"
          headers:
            koreUserId: "abc"
            botId: "asd"
            accountId: "qwe"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
            content-type: "application/json"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 404 # Expecting Not Found response
        think: 1
