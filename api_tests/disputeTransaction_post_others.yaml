# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /disputeTransaction_post for http method type POST in artillery framework

# RoostTestHash=a16706fdab


config:
  target: "{{ $processEnvironment.API_HOST }}"
  processor: "./processor.js"
  plugins:
    expect: {}
  payload:
    path: "disputeTransaction_post_others.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "accountId"
      - "customerId"
      - "emailId"
      - "transactionId"
      - "reasonCode"
    skipHeader: true
  environments:
    development:
      target: "{{ $processEnvironment.API_HOST }}"
      http:
        pool: 10
scenarios:
  - name: "Test Scenario for Non-Success API Responses"
    flow:
      - log: "Sending a POST request with an invalid payload"
        post:
          url: "/disputeTransaction"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            emailId: "{{ emailId }}"
            transactionsData: 
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 400
        think: 1

      - log: "Sending a POST request without authorization token"
        post:
          url: "/disputeTransaction"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "{{ customerId }}"
            emailId: "{{ emailId }}"
            transactionsData: 
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 401
        think: 1

      - log: "Sending a POST request to an invalid URL"
        post:
          url: "/invalidURL"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            emailId: "{{ emailId }}"
            transactionsData: 
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 404
        think: 1
