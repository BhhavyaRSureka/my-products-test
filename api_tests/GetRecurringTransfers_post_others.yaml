# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /GetRecurringTransfers_post for http method type POST in artillery framework

# RoostTestHash=7e03af5a84


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "GetRecurringTransfers_post_others.csv"
    fields: ["customerId", "status"]
    skipHeader: true
  environments:
    variable:
      auth: "{{$processEnvironment.AUTH_TOKEN}}"
scenarios:
  - name: "Test non-successful API requests"
    flow:
    - log: "Test with invalid payload"
      post:
        url: "/GetRecurringTransfers"
        headers:
          koreUserId: "invalid"
          botId: "invalid"
          userCode: "invalid"
          accountId: "invalid"
          Authorization: "Bearer {{ auth }}"
        json:
          customerId: "{{ customerId }}"
          status: "{{ status }}"
        expect:
          - statusCode: 400
      think: 1
    - log: "Test with invalid Authorization header"
      post:
        url: "/GetRecurringTransfers"
        headers:
          koreUserId: "valid"
          botId: "valid"
          userCode: "valid"
          accountId: "valid"
          Authorization: "Bearer invalid"
        json:
          customerId: "{{ customerId }}"
          status: "{{ status }}"
        expect:
          - statusCode: 401
      think: 1
    - log: "Test with missing required headers"
      post:
        url: "/GetRecurringTransfers"
        headers:
          koreUserId: "valid"
          userCode: "valid"
          Authorization: "Bearer {{ auth }}"
        json:
          customerId: "{{ customerId }}"
          status: "{{ status }}"
        expect:
          - statusCode: 400
      think: 1
    - log: "Test with invalid URL"
      post:
        url: "/InvalidURL"
        headers:
          koreUserId: "valid"
          botId: "valid"
          userCode: "valid"
          accountId: "valid"
          Authorization: "Bearer {{ auth }}"
        json:
          customerId: "{{ customerId }}"
          status: "{{ status }}"
        expect:
          - statusCode: 404
      think: 1
