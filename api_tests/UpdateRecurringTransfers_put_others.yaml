# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /UpdateRecurringTransfers_put for http method type PUT in artillery framework

# RoostTestHash=d94103a8c3


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "UpdateRecurringTransfers_put_others.csv"
    fields:
      - "customerId"
      - "paymentId"
      - "sourceAccountId"
      - "targetAccountId"
      - "amount"
      - "scheduledDate"
      - "recurringOptions"
      - "updateTransferType"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: Test non-successful API requests
    flow:
      - log: "Testing with invalid payload"
        post:
          url: "/UpdateRecurringTransfers"
          headers:
            koreUserId: "invalid"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            recurringOptions: "{{ recurringOptions }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 400
            - hasProperty: "errors"
        think: 1

      - log: "Testing with invalid authorization token"
        post:
          url: "/UpdateRecurringTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer invalid_token"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            recurringOptions: "{{ recurringOptions }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 401
        think: 1

      - log: "Testing with non-existent endpoint"
        post:
          url: "/NonExistentEndpoint"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            recurringOptions: "{{ recurringOptions }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 404
        think: 1
