# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /UpdateScheduleTransfers_put for http method type PUT in artillery framework

# RoostTestHash=c0505709a3


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "UpdateScheduleTransfers_put_others.csv"
    fields:
      - "customerId"
      - "paymentId"
      - "amount"
      - "scheduledDate"
      - "sourceAccountId"
      - "targetAccountId"
    skipHeader: true

scenarios:
  - name: "UpdateScheduleTransfers API failure scenarios"
    flow:
      - post:
          url: "/wrongEndpoint"
          headers:
            koreUserId: "invalid"
            botId: "{{ botId }}"
            userCode: "invalid"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 404 # Expected outcome: The API endpoint does not exist
          log: "Attempted to post to a non-existent API endpoint"
          think: 1

      - post:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "invalid"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 401 # Expected outcome: The botId is invalid
          log: "Attempted to post with an invalid botId"
          think: 1

      - post:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "invalid"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 401 # Expected outcome: The accountId is invalid
          log: "Attempted to post with an invalid accountId"
          think: 1

      - post:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "invalid"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 401 # Expected outcome: The Authorization token is invalid
          log: "Attempted to post with an invalid Authorization token"
          think: 1

      - post:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "invalid"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 400 # Expected outcome: The paymentId is invalid
          log: "Attempted to post with an invalid paymentId"
          think: 1

      - post:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "invalid"
            paymentId: "{{ paymentId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 400 # Expected outcome: The customerId is invalid
          log: "Attempted to post with an invalid customerId"
          think: 1
