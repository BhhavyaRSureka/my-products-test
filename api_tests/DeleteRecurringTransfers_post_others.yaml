# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /DeleteRecurringTransfers_post for http method type POST in artillery framework

# RoostTestHash=2abad00381


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  plugins:
    expect: {}
  payload:
    path: "DeleteRecurringTransfers_post_others.csv"
    fields:
      - "paymentId"
      - "updateTransferType"
      - "customerId"
    skipHeader: true

scenarios:
  - name: "Non-success API requests"
    flow:
      - log: "Sending a request with missing required fields in the payload"
        post:
          url: "/DeleteRecurringTransfers"
          headers:
            koreUserId: "testUserId"
            botId: "testBotId"
            userCode: "testUserCode"
            accountId: "testAccountId"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "message"
          think: 1

      - log: "Sending a request with an invalid authentication token"
        post:
          url: "/DeleteRecurringTransfers"
          headers:
            koreUserId: "testUserId"
            botId: "testBotId"
            userCode: "testUserCode"
            accountId: "testAccountId"
            Authorization: "InvalidToken"
          json:
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
            customerId: "{{ customerId }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - hasProperty: "message"
          think: 1

      - log: "Sending a request to an invalid URL"
        post:
          url: "/InvalidURL"
          headers:
            koreUserId: "testUserId"
            botId: "testBotId"
            userCode: "testUserCode"
            accountId: "testAccountId"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
            customerId: "{{ customerId }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
            - hasProperty: "message"
          think: 1
