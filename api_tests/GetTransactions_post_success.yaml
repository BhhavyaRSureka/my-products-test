# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /GetTransactions_post for http method type POST in artillery framework

# RoostTestHash=207beafabe


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "GetTransactions_post_success.csv"
    fields:
      - "customerId"
      - "accountNumber"
      - "startDate"
      - "endDate"
      - "status"
      - "transactionAmount"
    skipHeader: true
  plugins:
    expect: {}
  headers:
    Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
    koreUserId: "testUser"
    botId: "testBot"
    accountId: "testAccount"
    X-Auth-token: "testToken"
    X-CORRELATION-ID: "1234567890"

scenarios:
  - name: "Get Transactions Scenario"
    flow:
      - post:
          url: "/GetTransactions"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
            koreUserId: "testUser"
            botId: "testBot"
            accountId: "testAccount"
            X-Auth-token: "testToken"
            X-CORRELATION-ID: "1234567890"
          json:
            customerId: "{{ customerId }}"
            accountNumber: "{{ accountNumber }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            status: "{{ status }}"
            transactionAmount: "{{ transactionAmount }}"
          expect:
            - statusCode: 200
            - hasProperty: "items"
            - hasProperty: "items.customerId"
            - hasProperty: "items.transactionId"
            - hasProperty: "items.accountNumber"
            - hasProperty: "items.timestamp"
            - hasProperty: "items.amount"
            - hasProperty: "items.currency"
            - hasProperty: "items.debitOrCredit"
            - hasProperty: "items.description"
            - hasProperty: "items.paymentMode"
            - hasProperty: "items.DBANames"
            - hasProperty: "items.status"
          think: 1
