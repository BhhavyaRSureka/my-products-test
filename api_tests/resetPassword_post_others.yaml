# Test generated by RoostGPT for test ArtilleryTest1 using AI Type Open AI and AI Model gpt-4


# Test generated for /resetPassword_post for http method type POST in artillery framework

# RoostTestHash=79c3f016d8


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  plugins:
    expect: {}
  payload:
    path: "resetPassword_post_others.csv"
    fields:
      - "username"
      - "password"
    skipHeader: true

scenarios:
  - name: "Testing non-success API responses"
    flow:
      - log: "Sending a POST request with invalid username"
        post:
          url: "/resetPassword"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "invalidUsername"
            password: "{{ password }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Sending a POST request with invalid password"
        post:
          url: "/resetPassword"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "{{ username }}"
            password: "invalidPassword"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Sending a POST request with missing username"
        post:
          url: "/resetPassword"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            password: "{{ password }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Sending a POST request with missing password"
        post:
          url: "/resetPassword"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "{{ username }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Sending a POST request to an invalid URL"
        post:
          url: "/invalidUrl"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "{{ username }}"
            password: "{{ password }}"
          expect:
            - statusCode: 404
      - think: 1
