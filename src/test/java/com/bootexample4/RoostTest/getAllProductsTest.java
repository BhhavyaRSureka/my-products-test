/*
Test generated by RoostGPT for test Bhhavya-Gherkin using AI Type Open AI and AI Model gpt-4

{
  background: null,
  rule: null,
  scenario: 'Get all products\r\n' +
    '        When the client sends a GET request "/api/products" to get the list of all products\r\n' +
    '        Then the list of products returned should be empty',
  title: 'Get all products'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.testng.Assert;
import org.testng.annotations.Test;

import static io.restassured.RestAssured.given;

public class getAllProductsTest {

    @Test
    public void testGetAllProducts() {
        // Define base URL
        RestAssured.baseURI = System.getenv("ROOST_SERVER_URL") + "/api";

        // Send GET request
        Response response = given()
                .contentType(ContentType.JSON)
                .when()
                .get("/products");

        // Validate response status code
        Assert.assertEquals(response.getStatusCode(), 200, "Expected response code is 200 but found " + response.getStatusCode());

        // Validate response body
        Assert.assertTrue(response.getBody().jsonPath().getList("$").isEmpty(), "Expected empty list but found " + response.getBody().asString());

        // Validate response structure
        response.then().assertThat()
                .body("id", is(instanceOf(Integer.class)))
                .body("name", is(instanceOf(String.class)))
                .body("description", is(instanceOf(String.class)))
                .body("price", is(instanceOf(Integer.class)));
    }
}
